<testsuite name="tests.register_and_send.Default" tests="2" errors="0" failures="0" skipped="0" time="0.864715" timestamp="2024-02-16T09:23:36.839181" hostname="USMCDWNCAD73ZD0"><testcase classname="tests.register_and_send.Default" name="To test the registerlistener and send apis -- @1.1 topic_names" status="passed" time="0.04083"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: To test the registerlistener and send apis -- @1.1 topic_names
    Given “self” creates data for "registerlistener" ... passed in 0.001s
    And sets "uri.entity.name" to "body.access" ... passed in 0.001s
    And sets "uri.resource.name" to "door" ... passed in 0.002s
    And sets "uri.resource.instance" to "front_left" ... passed in 0.001s
    And sets "uri.resource.message" to "Door" ... passed in 0.003s
    And sends "registerlistener" request ... passed in 0.002s
    When “python” creates data for "send" ... passed in 0.002s
    And sets "uri.entity.name" to "body.access" ... passed in 0.001s
    And sets "uri.resource.name" to "door" ... passed in 0.001s
    And sets "uri.resource.instance" to "front_left" ... passed in 0.000s
    And sets "uri.resource.message" to "Door" ... passed in 0.001s
    And sets "attributes.priority" to "UPRIORITY_CS1" ... passed in 0.001s
    And sets "attributes.type" to "UMESSAGE_TYPE_PUBLISH" ... passed in 0.003s
    And sets "attributes.id" to "12345" ... passed in 0.003s
    And sets "payload.format" to "protobuf" ... passed in 0.003s
    And sets "payload.value" to "serialized protobuf data" ... passed in 0.001s
    And sends "send" request ... passed in 0.015s
    Then uE1 receives the payload ... passed in 0.002s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="tests.register_and_send.Default" name="To test the registerlistener and send apis -- @1.2 topic_names" status="passed" time="0.823885"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: To test the registerlistener and send apis -- @1.2 topic_names
    Given “self” creates data for "registerlistener" ... passed in 0.003s
    And sets "uri.entity.name" to "body.access" ... passed in 0.002s
    And sets "uri.resource.name" to "door" ... passed in 0.001s
    And sets "uri.resource.instance" to "front_left" ... passed in 0.003s
    And sets "uri.resource.message" to "Door" ... passed in 0.004s
    And sends "registerlistener" request ... passed in 0.004s
    When “java” creates data for "send" ... passed in 0.609s
    And sets "uri.entity.name" to "body.access" ... passed in 0.002s
    And sets "uri.resource.name" to "door" ... passed in 0.002s
    And sets "uri.resource.instance" to "front_left" ... passed in 0.001s
    And sets "uri.resource.message" to "Door" ... passed in 0.002s
    And sets "attributes.priority" to "UPRIORITY_CS1" ... passed in 0.001s
    And sets "attributes.type" to "UMESSAGE_TYPE_PUBLISH" ... passed in 0.001s
    And sets "attributes.id" to "12345" ... passed in 0.002s
    And sets "payload.format" to "protobuf" ... passed in 0.004s
    And sets "payload.value" to "serialized protobuf data" ... passed in 0.002s
    And sends "send" request ... passed in 0.184s
    Then uE1 receives the payload ... passed in 0.001s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
accepted <socket.socket fd=700, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.5', 12345), raddr=('127.0.0.1', 61656)> from ('127.0.0.1', 61656)
Initialized new client socket! java ('127.0.0.1', 61656)

]]>
</system-out></testcase></testsuite>