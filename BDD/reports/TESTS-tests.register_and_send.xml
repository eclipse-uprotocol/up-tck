<testsuite name="tests.register_and_send.Default" tests="1" errors="1" failures="0" skipped="0" time="0.028353" timestamp="2024-02-12T12:33:10.676381" hostname="DCWVM20UBU18169"><testcase classname="tests.register_and_send.Default" name="To test the registerlistener and send apis -- @1.1 topic_names" status="failed" time="0.028353"><error type="BrokenPipeError" message="[Errno 32] Broken pipe">
<![CDATA[
Failing step: And sends "registerlistener" request ... failed in 0.022s
Location: features/tests/register_and_send.feature:10
Traceback (most recent call last):
  File "/home/qz3f1z/.local/lib/python3.8/site-packages/behave/model.py", line 1329, in run
    match.run(runner.context)
  File "/home/qz3f1z/.local/lib/python3.8/site-packages/behave/matchers.py", line 98, in run
    self.func(context, *args, **kwargs)
  File "features/steps/tck_step_implementations.py", line 60, in step_impl
    context.tm.receive_action_request(context.register_json_array,listener)
  File "/home/qz3f1z/personal-workspace/uprotocol-tck/BDD/features/steps/test_manager/testmanager.py", line 414, in receive_action_request
    return self.register_listener_command(sdk_name, command, topic, listener)
  File "/home/qz3f1z/personal-workspace/uprotocol-tck/BDD/features/steps/test_manager/testmanager.py", line 298, in register_listener_command
    self.__send_to_test_agent(test_agent_socket, command, umsg)
  File "/home/qz3f1z/personal-workspace/uprotocol-tck/BDD/features/steps/test_manager/testmanager.py", line 218, in __send_to_test_agent
    send_socket_data(test_agent_socket, message)
  File "/home/qz3f1z/personal-workspace/uprotocol-tck/BDD/features/steps/up_client_socket_python/utils/socket_message_processing_utils.py", line 18, in send_socket_data
    s.send(msg + filler)
BrokenPipeError: [Errno 32] Broken pipe

Captured logging:
INFO:formatted_log:Inside create register listener data
INFO:formatted_log:RegisterListener json data: Key is ue value is java
INFO:formatted_log:RegisterListener json data: Key is action value is registerlistener
INFO:formatted_log:RegisterListener json data: Key is uri.entity.name value is body.access
INFO:formatted_log:RegisterListener json data: Key is uri.resource.name value is door
INFO:formatted_log:RegisterListener json data: Key is uri.resource.instance value is front_left
INFO:formatted_log:RegisterListener json data: Key is uri.resource.message value is Door
INFO:formatted_log:Register listener {'ue': ['java'], 'action': ['registerlistener'], 'uri.entity.name': ['body.access'], 'uri.resource.name': ['door'], 'uri.resource.instance': ['front_left'], 'uri.resource.message': ['Door']}]]>
</error><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: To test the registerlistener and send apis -- @1.1 topic_names
    Given “uE1” creates uuri data to register a listener ... passed in 0.001s
    And sets uuri "ue" to "java" ... passed in 0.000s
    And sets uuri "action" to "registerlistener" ... passed in 0.000s
    And sets uuri "uri.entity.name" to "body.access" ... passed in 0.000s
    And sets uuri "uri.resource.name" to "door" ... passed in 0.003s
    And sets uuri "uri.resource.instance" to "front_left" ... passed in 0.001s
    And sets uuri "uri.resource.message" to "Door" ... passed in 0.001s
    And sends "registerlistener" request ... failed in 0.022s
    When “uE2” test agent creates send data ... skipped in 0.000s
    And sets "ue" to "python" ... skipped in 0.000s
    And sets "action" to "send" ... skipped in 0.000s
    And sets "uri.entity.name" to "body.access" ... skipped in 0.000s
    And sets "uri.resource.name" to "door" ... skipped in 0.000s
    And sets "uri.resource.instance" to "front_left" ... skipped in 0.000s
    And sets "uri.resource.message" to "Door" ... skipped in 0.000s
    And sets "attributes.priority" to "UPRIORITY_CS1" ... skipped in 0.000s
    And sets "attributes.type" to "UMESSAGE_TYPE_PUBLISH" ... skipped in 0.000s
    And sets "attributes.id" to "long serialized uuid" ... skipped in 0.000s
    And sets "payload.format" to "UPAYLOAD_FORMAT_PROTOBUF" ... skipped in 0.000s
    And sets "payload.value" to "serialized protobuf data" ... skipped in 0.000s
    And sends data ... skipped in 0.000s
    Then uE1 receives the payload ... skipped in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase></testsuite>