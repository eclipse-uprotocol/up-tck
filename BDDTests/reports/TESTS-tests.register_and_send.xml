<testsuite name="tests.register_and_send.Default" tests="2" errors="0" failures="0" skipped="0" time="3.241186" timestamp="2024-02-15T18:38:06.856787" hostname="USTC2WNCAD31XB6"><testcase classname="tests.register_and_send.Default" name="To test the registerlistener and send apis -- @1.1 topic_names" status="passed" time="3.111787"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: To test the registerlistener and send apis -- @1.1 topic_names
    Given “self” creates data for "registerlistener" ... passed in 0.005s
    And sets "uri.entity.name" to "body.access" ... passed in 0.002s
    And sets "uri.resource.name" to "door" ... passed in 0.002s
    And sets "uri.resource.instance" to "front_left" ... passed in 0.003s
    And sets "uri.resource.message" to "Door" ... passed in 0.003s
    And sends "registerlistener" request ... passed in 0.004s
    When “java” creates data for "send" ... passed in 2.678s
    And sets "uri.entity.name" to "body.access" ... passed in 0.002s
    And sets "uri.resource.name" to "door" ... passed in 0.003s
    And sets "uri.resource.instance" to "front_left" ... passed in 0.002s
    And sets "uri.resource.message" to "Door" ... passed in 0.003s
    And sets "attributes.priority" to "UPRIORITY_CS1" ... passed in 0.005s
    And sets "attributes.type" to "UMESSAGE_TYPE_PUBLISH" ... passed in 0.002s
    And sets "attributes.id" to "12345" ... passed in 0.004s
    And sets "payload.format" to "protobuf" ... passed in 0.003s
    And sets "payload.value" to "serialized protobuf data" ... passed in 0.005s
    And sends "send" request ... passed in 0.384s
    Then uE1 receives the payload ... passed in 0.003s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
accepted <socket.socket fd=388, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.5', 12345), raddr=('127.0.0.1', 56918)> from ('127.0.0.1', 56918)
Initialized new client socket! python ('127.0.0.1', 56918)
accepted <socket.socket fd=432, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.5', 12345), raddr=('127.0.0.1', 56920)> from ('127.0.0.1', 56920)
Initialized new client socket! java ('127.0.0.1', 56920)
value: "serialized protobuf data"
format: UPAYLOAD_FORMAT_PROTOBUF


]]>
</system-out></testcase><testcase classname="tests.register_and_send.Default" name="To test the registerlistener and send apis -- @1.2 topic_names" status="passed" time="0.129399"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: To test the registerlistener and send apis -- @1.2 topic_names
    Given “self” creates data for "registerlistener" ... passed in 0.009s
    And sets "uri.entity.name" to "body.access" ... passed in 0.002s
    And sets "uri.resource.name" to "door" ... passed in 0.006s
    And sets "uri.resource.instance" to "front_left" ... passed in 0.005s
    And sets "uri.resource.message" to "Door" ... passed in 0.003s
    And sends "registerlistener" request ... passed in 0.007s
    When “python” creates data for "send" ... passed in 0.006s
    And sets "uri.entity.name" to "body.access" ... passed in 0.002s
    And sets "uri.resource.name" to "door" ... passed in 0.004s
    And sets "uri.resource.instance" to "front_left" ... passed in 0.004s
    And sets "uri.resource.message" to "Door" ... passed in 0.004s
    And sets "attributes.priority" to "UPRIORITY_CS1" ... passed in 0.003s
    And sets "attributes.type" to "UMESSAGE_TYPE_PUBLISH" ... passed in 0.005s
    And sets "attributes.id" to "12345" ... passed in 0.003s
    And sets "payload.format" to "protobuf" ... passed in 0.003s
    And sets "payload.value" to "serialized protobuf data" ... passed in 0.003s
    And sends "send" request ... passed in 0.059s
    Then uE1 receives the payload ... passed in 0.003s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
Listener onreceived
value: "serialized protobuf data"
format: UPAYLOAD_FORMAT_PROTOBUF


]]>
</system-out></testcase></testsuite>